version: '2.1'
services:
  nginx:
    restart: always
    container_name: ezf_nginx
    build: ./nginx/
    ports:
      - 8080:80
    links:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx

  app:
    container_name: ezf_app
    restart: "no"
    image: thecodingmachine/php:7.4-v3-fpm
    volumes:
      - ../../api:/var/www/html
      - $SSH_AUTH_SOCK:/ssh-agent
      - ~/.ssh:/home/docker/.ssh:ro
    environment:
      SSH_AUTH_SOCK: /ssh-agent
      PHP_EXTENSION_GD: 1
      PHP_EXTENSION_XDEBUG: 1
      PHP_EXTENSION_BCMATH: 1
      PHP_EXTENSION_SOAP: 1
      PHP_EXTENSION_INTL: 1
      PHP_EXTENSION_MONGODB: 1
      PHP_EXTENSION_SOCKETS: 1
      PHP_EXTENSION_GRPC: 1
      PHP_INI_XDEBUG__REMOTE_HOST: host.docker.internal
      PHP_INI_XDEBUG__REMOTE_PORT: 9001
      PHP_INI_XDEBUG__REMOTE_LOG: /tmp/xdebug.log
      PHP_INI_XDEBUG__REMOTE_AUTOSTART: 0
      PHP_INI_XDEBUG__REMOTE_CONNECT_BACK: 0
      PHP_INI_XDEBUG__REMOTE_ENABLE: 1
      PHP_INI_XDEBUG__CLI_COLOR: 1
      PHP_IDE_CONFIG: "serverName=docker_academy"
      XDEBUG_CONFIG: "idekey=PHPSTORM max_nesting_level=1500"
      STARTUP_COMMAND_1: sudo apt-get update
      STARTUP_COMMAND_2: sudo apt-get install -y ssmtp
      STARTUP_COMMAND_3: sudo chmod 777 -R /etc/ssmtp/ && sudo touch /etc/php/7.4/fpm/conf.d/mail.ini && sudo chmod 777 /etc/php/7.4/fpm/conf.d/mail.ini
      STARTUP_COMMAND_4: sudo touch /etc/php/7.4/cli/conf.d/mail.ini && sudo chmod 777 /etc/php/7.4/cli/conf.d/mail.ini
      STARTUP_COMMAND_5: echo "FromLineOverride=YES" >> /etc/ssmtp/ssmtp.conf && echo 'sendmail_path = "/usr/sbin/ssmtp -t"' > /etc/php/7.4/fpm/conf.d/mail.ini && echo 'sendmail_path = "/usr/sbin/ssmtp -t"' > /etc/php/7.4/cli/conf.d/mail.ini
      STARTUP_COMMAND_6: sudo chmod 777 -R /home/docker/.composer/ && sudo chmod 777 -R /usr/local/bin/
      STARTUP_COMMAND_7: composer self-update --2
    external_links:
      - nginx:router.ezf.develop
      - nginx:api.course.ezf.develop
      - nginx:api.academy.ezf.develop
      - nginx:api.contacts.ezf.develop
      - nginx:api.funnels.ezf.develop
      - nginx:api.builder.ezf.develop
      - nginx:api.player.ezf.develop
      - nginx:api.academy.testing.ezf.develop
      - nginx:api.user.ezf.develop
      - nginx:api.builder.testing.ezf.develop
      - nginx:api.funnels.testing.ezf.develop
      - nginx:api.contacts.testing.ezf.develop
      - nginx:api.user.testing.ezf.develop
      - nginx:api.player.testing.ezf.develop
      - nginx:api.cloud.testing.ezf.develop
      - nginx:api.cloud.ezf.develop
      - nginx:api.notifications.ezf.develop
      - nginx:api.notifications.testing.ezf.develop
      - nginx:api.course.testing.ezf.develop
      - nginx:api.webinar.ezf.develop
      - nginx:api.webinar.testing.ezf.develop
      - nginx:api.statistic.testing.ezf.develop
      - nginx:api.zapier.ezf.develop
      - nginx:api.zapier.testing.ezf.develop
      - nginx:api.links.ezf.develop
    links:
      - redis
      - mariadb
      - rabbitmq
      - ezf_mongo
      - blackfire
      #- cratedb

  mariadb:
    container_name: ezf_mariadb
    image: mariadb:10.5.8
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./databases:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret_password
      MYSQL_DATABASE: ezf_academy
      MYSQL_USER: ezf
      MYSQL_PASSWORD: BZQbdXhP7J*viO0%cJ0nPfu2

  adminer:
    image: adminer
    restart: always
    ports:
      - 8084:8080


  redis:
    image: redis
    container_name: ezf_redis
    restart: "no"
    command: redis-server --requirepass 12345678
    ports:
      - 7001:6379

  rabbitmq:
    image: rabbitmq:management
    container_name: ezf_rabbit
    restart: "no"
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 8085:15672

  ezf_mongo:
    image: mongo
    ports:
      - "27017:27017"

#  cratedb:
#    image: crate:latest
#    ports:
#      - "4201:4200"
#    volumes:
#      - ./cratedb:/data